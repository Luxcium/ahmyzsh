"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var express_1 = tslib_1.__importDefault(require("express"));
var body_parser_1 = tslib_1.__importDefault(require("body-parser"));
var express_session_1 = tslib_1.__importDefault(require("express-session"));
var safe_1 = tslib_1.__importDefault(require("colors/safe"));
var addMiddleware = (function () { return function (app) { return function (db) {
    console.log('> ');
    console.log("> Start Server => Middlewares:");
    console.log('> ');
    app.use(body_parser_1.default.json());
    console.log(">    " + safe_1.default.green("adding: " + safe_1.default.magenta('JSON parser middleware')));
    app.use(body_parser_1.default.urlencoded({ extended: true }));
    console.log(">    " + safe_1.default.green("adding: " + safe_1.default.magenta('Body parser middleware')));
    app.use(express_session_1.default({ secret: 'will need a long string in production', resave: false, saveUninitialized: false }));
    console.log(">    " + safe_1.default.green("adding: " + safe_1.default.magenta('Session middleware')));
    app.use(express_1.default.static('exports/client'));
    console.log(">    " + safe_1.default.green("adding: " + safe_1.default.magenta('Static folder exports/client')));
    app.use(express_1.default.static('exports/public'));
    console.log(">    " + safe_1.default.green("adding: " + safe_1.default.magenta('Static folder exports/public')));
    return app;
}; }; })();
exports.addMiddleware = addMiddleware;
exports.default = addMiddleware;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkTWlkZGxld2VhcmUuanMiLCJzb3VyY2VSb290IjoiLi9zZXJ2ZXIvIiwic291cmNlcyI6WyJzdGFydFNlcnZlci9hZGRNaWRkbGV3ZWFyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSw0REFBOEI7QUFDOUIsb0VBQXFDO0FBQ3JDLDRFQUFzQztBQUN0Qyw2REFBaUM7QUFHakMsSUFBTSxhQUFhLEdBQUcsQ0FBQyxjQUFNLE9BQUEsVUFBQyxHQUFvQixJQUFLLE9BQUEsVUFBQyxFQUFPO0lBQzdELE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFHbEIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxxQkFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFRLGNBQU0sQ0FBQyxLQUFLLENBQUMsYUFBVyxjQUFNLENBQUMsT0FBTyxDQUFDLHdCQUF3QixDQUFHLENBQUcsQ0FBQyxDQUFDO0lBRzNGLEdBQUcsQ0FBQyxHQUFHLENBQUMscUJBQVUsQ0FBQyxVQUFVLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBUSxjQUFNLENBQUMsS0FBSyxDQUFDLGFBQVcsY0FBTSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBRyxDQUFHLENBQUMsQ0FBQztJQUczRixHQUFHLENBQUMsR0FBRyxDQUFDLHlCQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsdUNBQXVDLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDL0csT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFRLGNBQU0sQ0FBQyxLQUFLLENBQUMsYUFBVyxjQUFNLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFHLENBQUcsQ0FBQyxDQUFDO0lBR3ZGLEdBQUcsQ0FBQyxHQUFHLENBQUMsaUJBQU8sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBQzFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBUSxjQUFNLENBQUMsS0FBSyxDQUFDLGFBQVcsY0FBTSxDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBRyxDQUFHLENBQUMsQ0FBQztJQUdqRyxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFPLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztJQUMxQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVEsY0FBTSxDQUFDLEtBQUssQ0FBQyxhQUFXLGNBQU0sQ0FBQyxPQUFPLENBQUMsOEJBQThCLENBQUcsQ0FBRyxDQUFDLENBQUM7SUFHakcsT0FBTyxHQUFHLENBQUM7QUFHYixDQUFDLEVBN0JzRCxDQTZCdEQsRUE3QjRCLENBNkI1QixDQUFDLEVBQUUsQ0FBQztBQUVJLHNDQUFhO0FBQ3RCLGtCQUFlLGFBQWEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHNlc3Npb24gZnJvbSAnZXhwcmVzcy1zZXNzaW9uJztcbmltcG9ydCBjb2xvcnMgZnJvbSAnY29sb3JzL3NhZmUnO1xuLy8gaW1wb3J0IG1vbmdvZGIgZnJvbSAnbW9uZ29kYic7XG5cbmNvbnN0IGFkZE1pZGRsZXdhcmUgPSAoKCkgPT4gKGFwcDogZXhwcmVzcy5FeHByZXNzKSA9PiAoZGI6IGFueSAvKm1vbmdvZGIuRGIqLykgPT4ge1xuICBjb25zb2xlLmxvZygnPiAnKTtcbiAgY29uc29sZS5sb2coYD4gU3RhcnQgU2VydmVyID0+IE1pZGRsZXdhcmVzOmApO1xuICBjb25zb2xlLmxvZygnPiAnKTtcbiAgLy9cbiAgLy9cbiAgYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG4gIGNvbnNvbGUubG9nKGA+ICAgICR7Y29sb3JzLmdyZWVuKGBhZGRpbmc6ICR7Y29sb3JzLm1hZ2VudGEoJ0pTT04gcGFyc2VyIG1pZGRsZXdhcmUnKX1gKX1gKTtcbiAgLy9cbiAgLy9cbiAgYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG4gIGNvbnNvbGUubG9nKGA+ICAgICR7Y29sb3JzLmdyZWVuKGBhZGRpbmc6ICR7Y29sb3JzLm1hZ2VudGEoJ0JvZHkgcGFyc2VyIG1pZGRsZXdhcmUnKX1gKX1gKTtcbiAgLy9cbiAgLy9cbiAgYXBwLnVzZShzZXNzaW9uKHsgc2VjcmV0OiAnd2lsbCBuZWVkIGEgbG9uZyBzdHJpbmcgaW4gcHJvZHVjdGlvbicsIHJlc2F2ZTogZmFsc2UsIHNhdmVVbmluaXRpYWxpemVkOiBmYWxzZSB9KSk7XG4gIGNvbnNvbGUubG9nKGA+ICAgICR7Y29sb3JzLmdyZWVuKGBhZGRpbmc6ICR7Y29sb3JzLm1hZ2VudGEoJ1Nlc3Npb24gbWlkZGxld2FyZScpfWApfWApO1xuICAvL1xuICAvL1xuICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKCdleHBvcnRzL2NsaWVudCcpKTtcbiAgY29uc29sZS5sb2coYD4gICAgJHtjb2xvcnMuZ3JlZW4oYGFkZGluZzogJHtjb2xvcnMubWFnZW50YSgnU3RhdGljIGZvbGRlciBleHBvcnRzL2NsaWVudCcpfWApfWApO1xuICAvL1xuICAvL1xuICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKCdleHBvcnRzL3B1YmxpYycpKTtcbiAgY29uc29sZS5sb2coYD4gICAgJHtjb2xvcnMuZ3JlZW4oYGFkZGluZzogJHtjb2xvcnMubWFnZW50YSgnU3RhdGljIGZvbGRlciBleHBvcnRzL3B1YmxpYycpfWApfWApO1xuICAvL1xuICAvL1xuICByZXR1cm4gYXBwO1xuICAvL1xuICAvL1xufSkoKTtcblxuZXhwb3J0IHsgYWRkTWlkZGxld2FyZSB9O1xuZXhwb3J0IGRlZmF1bHQgYWRkTWlkZGxld2FyZTtcbiJdfQ==