{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "For_Loop": {
    "prefix": "for",
    "body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"],
    "scope": "javascript,typescript",
    "description": "For Loop"
  },
  "Print to console ok": {
    "scope": "javascript,typescript",
    "prefix": "log",
    "body": ["console.log('$1');", "$2"],
    "description": "Log output to console"
  },
  "Encapsulated module": {
    "body": [
      "\n\nconst ${TM_FILENAME_BASE} =  (()=>($1)=>{})();\n export {${TM_FILENAME_BASE}};\n export default ${TM_FILENAME_BASE};"
    ],
    "scope": "javascript,typescript",
    "prefix": "..",
    "description": "Create an empty encapsulated module with Arrow Function"
  },

  /* REACT TYPESCRIPT SECTION STATS HERE  */
  "Functional React Component": {
    "scope": "typescriptreact",
    "prefix": "rfc",
    "body": [
      "/** @format */\n\nimport React from 'react';\n\nconst ${TM_FILENAME_BASE} = () => {\n\treturn <div>${1:${TM_FILENAME_BASE}}</div>;\n};\n\nexport default ${TM_FILENAME_BASE};\n\n/*\n// NeB_401.CORP LTEE -- © ${CURRENT_YEAR} -- Benjamin Vincent Kasapoglu\n*/\n"
    ],
    "description": "Create a React functional component"
  }
  /* REACT TYPESCRIPT SECTION END HERE  */
}

/*
// NeB_401.CORP LTEE -- © ${CURRENT_YEAR} -- Benjamin Vincent Kasapoglu
*/
