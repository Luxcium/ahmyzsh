#!/usr/bin/env sh

# enable_startup

function enable_startup_() {

  function disable_at_shutdown_() {
    # akmods
    sudo systemctl disable dnf-makecache switcheroo-control docker.socket docker.service containerd.service ModemManager.service bluetooth.service NetworkManager.service avahi-daemon.socket avahi-daemon.service upower.service dnfdaemon.service --now --quiet

    sudo systemctl daemon-reload
    sudo systemctl daemon-reexec

  }

  function enable_at_startup_() {

    sudo systemctl enable NetworkManager.service ModemManager.service bluetooth.service avahi-daemon.service switcheroo-control dnf-makecache --now --quiet
    sudo akmods

    sudo systemctl daemon-reload
    sudo systemctl daemon-reexec

    sudo renice -n -18 -p $(pidof Xorg) &
    sudo renice -n -17 -p $(pidof plasmashell) &
    sudo renice -n -16 -p $(pidof startplasma-x11) &
    sudo renice -n -15 -p $(pidof plasma_session) &
    sudo renice -n -14 -p $(pidof sddm-helper) &
    sudo renice -n -13 -p $(pidof sddm) &
    sudo renice -n -12 -p $(pidof kwin_x11) &
    sudo renice -n -11 -p $(pidof ksmserver) &

    sudo ionice -c 1 -n 0 -p $(pidof Xorg) &
    sudo ionice -c 1 -n 2 -p $(pidof plasmashell) &
    sudo ionice -c 1 -n 4 -p $(pidof plasma_session) &
    sudo ionice -c 1 -n 6 -p $(pidof kwin_x11) &
    sudo ionice -c 2 -n 0 -p $(pidof ksmserver) &
    sudo ionice -c 2 -n 2 -p $(pidof startplasma-x11) &
    sudo ionice -c 2 -n 0 -p $(pidof sddm-helper) &
    sudo ionice -c 2 -n 0 -p $(pidof sddm) &

  }

  # enable_systemctl down
  if [[ $1 == 'down' ]]; then
    disable_at_shutdown_
  fi

  # enable_systemctl up
  if [[ $1 == 'up' ]]; then
    enable_at_startup_
  fi

  # enable_systemctl restart
  if [[ $1 == 'restart' ]]; then
    disable_at_shutdown_ && enable_at_startup_ || exit 10
  fi

}

## Extra code make it easy to copy paste only the function out to use elsewhere
enable_startup_ "${@}"

__EXIT_STATUS="${?}"

unset -f enable_startup_

exit $__EXIT_STATUS

#* /usr/lib/systemd/system/docker.service
## Description=Docker Application Container Engine
## Documentation=https://docs.docker.com
#& After=
# network-online.target firewalld.service containerd.service
#& Wants=
# network-online.target
#& Requires=
# docker.socket containerd.service

#* [Unit] # /usr/lib/systemd/system/containerd.service
## Description=containerd container runtime
## Documentation=https://containerd.io
#& After=network.target local-fs.target

#* [Install]
#& WantedBy=multi-user.target

# function 8ujn() nji9-plkçèé

# 6+ () {
#   (
#     (
#       sudo dnf clean all &&
#         dnf makecache
#     ) &&
#       ( (
#         sudo nice -n -35 ionice -c 1 -n 2 dnf upgrade --downloadonly -y &
#       ) >/dev/null) 2>/dev/null
#   )
#   sudo nice -n -15 ionice -c 1 -n 4 dnf upgrade --setopt=keepcache=1
# }

# alias XXX="dnfup && playshutdown& sleep 4; sudo reboot"

## systemd-analyze blame |cat
## 7.879s dracut-initqueue.service
## 6.021s abrtd.service
## 1.832s systemd-udev-settle.service
## 1.263s docker.service
## 1.180s upower.service
## 874ms pmlogger_check.service
## 775ms pmlogger.service
## 758ms dkms.service
## 610ms lvm2-monitor.service
## 560ms systemd-logind.service
## 547ms firewalld.service
## 501ms initrd-switch-root.service
## 439ms udisks2.service
## 361ms smartd.service
## 345ms pmie_check.service
## 342ms pmie.service
## 317ms sssd.service
## 296ms pmcd.service
## 260ms lvm2-pvscan@259:3.service
## 255ms systemd-tmpfiles-setup.service
## 218ms libvirtd.service
## 210ms akmods.service
## 178ms avahi-daemon.service
## 177ms user@1000.service
## 177ms initrd-parse-etc.service
## 177ms systemd-journal-flush.service
## 163ms rtkit-daemon.service
## 162ms switcheroo-control.service
## 156ms systemd-machined.service
## 156ms systemd-homed.service
## 147ms containerd.service
## 146ms auditd.service
## 116ms dracut-cmdline.service
## 113ms polkit.service
## 110ms dbus-broker.service
## 100ms systemd-udevd.service
## 92ms systemd-udev-trigger.service
## 83ms dmraid-activation.service
## 76ms systemd-vconsole-setup.service
## 73ms cups.service
## 69ms accounts-daemon.service
## 61ms dracut-pre-pivot.service
## 52ms var-lib-nfs-rpc_pipefs.mount
## 52ms ModemManager.service
## 45ms systemd-journald.service
## 45ms systemd-tmpfiles-setup-dev.service
## 45ms systemd-userdbd.service
## 41ms dracut-pre-udev.service
## 40ms import-state.service
## 40ms lm_sensors.service
## 35ms gssproxy.service
## 31ms systemd-fsck@dev-disk-by\x2duuid-21BB\x2d9C7B.service
## 31ms chronyd.service
## 31ms sshd.service
## 30ms bluetooth.service
## 29ms systemd-fsck@dev-mapper-fedora\x2d\x2dnvme\x2dusers_files.service
## 28ms initrd-cleanup.service
## 27ms dev-mapper-fedora\x2d\x2dnvme\x2dsystem_swap.swap
## 27ms systemd-fsck@dev-disk-by\x2duuid-95b1bbf9\x2d5601\x2d4fe5\x2d8460\x2d840644f8c7b9.service
## 26ms systemd-fsck-root.service
## 26ms boot-efi.mount
## 26ms sssd-kcm.service
## 25ms colord.service
## 25ms rsyslog.service
## 25ms plymouth-quit-wait.service
## 24ms plymouth-quit.service
## 23ms livesys.service
## 22ms NetworkManager.service
## 21ms systemd-remount-fs.service
## 20ms netcf-transaction.service
## 20ms user-runtime-dir@1000.service
## 20ms redis_6379.service
## 20ms plymouth-switch-root.service
## 18ms systemd-random-seed.service
## 14ms systemd-modules-load.service
## 14ms plymouth-read-write.service
## 14ms systemd-update-utmp.service
## 13ms systemd-sysctl.service
## 13ms initrd-udevadm-cleanup-db.service
## 13ms plymouth-start.service
## 12ms home.mount
## 12ms systemd-update-utmp-runlevel.service
## 11ms livesys-late.service
## 11ms sysroot.mount
## 11ms systemd-user-sessions.service
## 11ms boot.mount
## 11ms systemd-repart.service
## 10ms systemd-rfkill.service
## 8ms dev-hugepages.mount
## 7ms dev-mqueue.mount
## 7ms sys-kernel-debug.mount
## 7ms kmod-static-nodes.service
## 6ms dracut-shutdown.service
## 6ms nfs-convert.service
## 6ms rpc-statd-notify.service
## 5ms sys-fs-fuse-connections.mount
## 3ms tmp.mount
## 3ms sys-kernel-config.mount
## 2ms iscsi-shutdown.service
## 2ms docker.socket

#+ /usr/lib/systemd/system/containerd.service
#+ /usr/lib/systemd/system/containerd.service
#+ /usr/lib/systemd/system/containerd.service
#+ /usr/lib/systemd/system/containerd.service
# Copyright The containerd Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#* [Unit] containerd.service
#% Description=containerd container runtime
#% Documentation=https://containerd.io
#& After=
# network.target local-fs.target

#* [Service]
#& ExecStartPre=-/sbin/modprobe overlay
#& ExecStart=/usr/bin/containerd

#& Type=notify
#& Delegate=yes
#& KillMode=process
#& Restart=always
#& RestartSec=5
# # Having non-zero Limit*s causes performance problems due to accounting overhead
# # in the kernel. We recommend using cgroups to do container-local accounting.
#& LimitNPROC=infinity
#& LimitCORE=infinity
#& LimitNOFILE=1048576
# # Comment TasksMax if your systemd version does not supports it.
# # Only systemd 226 and above support this version.
#& TasksMax=infinity
#& OOMScoreAdjust=-999

#* [Install]
#& WantedBy=multi-user.target

#+ /usr/lib/systemd/system/docker.service
#+ /usr/lib/systemd/system/docker.service
#+ /usr/lib/systemd/system/docker.service
#+ /usr/lib/systemd/system/docker.service

#* [Unit] docker.service
#% Description=Docker Application Container Engine
#% Documentation=https://docs.docker.com
#& After=
# network-online.target
# firewalld.service
# containerd.service
#& Wants=
# network-online.target
#& Requires=
# docker.socket
# containerd.service

#* [Service]
#& Type=notify
## the default is not to use systemd for cgroups because the delegate issues still
## exists and systemd currently does not support the cgroup feature set required
## for containers run by docker
#& ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
#& ExecReload=/bin/kill -s HUP $MAINPID
#& TimeoutSec=0
#& RestartSec=2
#& Restart=always
#&
## Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
## Both the old, and new location are accepted by systemd 229 and up, so using the old location
## to make them work for either version of systemd.
#& StartLimitBurst=3
#&
## Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
## Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
## this option work for either version of systemd.
#& StartLimitInterval=60s
#&
## Having non-zero Limit*s causes performance problems due to accounting overhead
## in the kernel. We recommend using cgroups to do container-local accounting.
#& LimitNOFILE=infinity
#& LimitNPROC=infinity
#& LimitCORE=infinity
#&
## Comment TasksMax if your systemd version does not support it.
## Only systemd 226 and above support this option.
#& TasksMax=infinity
#&
## set delegate yes so that systemd does not reset the cgroups of docker containers
#& Delegate=yes
#&
## kill only the docker process, not all processes in the cgroup
#& KillMode=process
#& OOMScoreAdjust=-500
#&
#* [Install]
#& WantedBy=multi-user.target

#+ /etc/systemd/system/docker.socket
#+ /etc/systemd/system/docker.socket
#+ /etc/systemd/system/docker.socket
#+ /etc/systemd/system/docker.socket

#* [Unit] docker.socket
#% Description=Docker Socket for the API
#&
#* [Socket]
#& ListenStream=/run/docker.sock
#& SocketMode=0660
#& SocketUser=root
#& SocketGroup=docker
#&
#* [Install]
#& WantedBy=sockets.target

# --before
#            With list-dependencies, show the units that are ordered after the specified unit. In other words, recursively
#            list units following the Before= dependency.

#            When passed to the list-jobs command, for each printed job show which other jobs it is waiting for. May be
#            combined with --after to show both the jobs waiting for each job as well as all jobs each job is waiting for.

#+ sudo systemctl list-dependencies NetworkManager.service --no-pager --with-dependencies --before
#& Show the units that are ordered after the specified unit
#+ NetworkManager.service
#+ ● ├─network.service
#+ ● ├─NetworkManager-wait-online.service
#+ ● ├─multi-user.target
#+ ● │ ├─systemd-update-utmp-runlevel.service
#+ ● │ ├─graphical.target
#+ ● │ │ ├─systemd-update-utmp-runlevel.service
#+ ● │ │ └─shutdown.target
#+ ● │ └─shutdown.target
#+ ● ├─network.target
#+ ● │ ├─autofs.service
#+ ● │ ├─containerd.service
#+ ● │ ├─cups.service
#+ ● │ ├─fcoe.service
#+ ● │ ├─gssproxy.service
#+ ● │ ├─iscsi-shutdown.service
#+ ● │ ├─iscsi.service
#+ ● │ ├─iscsid.service
#+ ● │ ├─iscsiuio.service
#+ ● │ ├─kdump.service
#+ ● │ ├─libvirt-guests.service
#+ ● │ ├─libvirtd.service
#+ ● │ ├─lldpad.service
#+ ● │ ├─rc-local.service
#+ ● │ ├─sshd.service
#+ ● │ ├─systemd-user-sessions.service
#+ ● │ ├─network-online.target
#+ ● │ │ ├─autofs.service
#+ ● │ │ ├─dnf-makecache.service
#+ ● │ │ ├─docker.service
#+ ● │ │ ├─iscsi.service
#+ ● │ │ ├─kdump.service
#+ ● │ │ ├─nfs-mountd.service
#+ ● │ │ ├─nfs-server.service
#+ ● │ │ ├─pmcd.service
#+ ● │ │ ├─pmie.service
#+ ● │ │ ├─pmlogger.service
#+ ● │ │ ├─rpc-statd-notify.service
#+ ● │ │ ├─rpc-statd.service
#+ ● │ │ └─shutdown.target
#+ ● │ └─shutdown.target
#+ ● └─shutdown.target
#& show the units that are ordered after the specified unit

#  --after
#      With list-dependencies, show the units that are ordered before the specified unit. In other words, recursively
#      list units following the After= dependency.

#      Note that any After= dependency is automatically mirrored to create a Before= dependency. Temporal dependencies
#      may be specified explicitly, but are also created implicitly for units which are WantedBy= targets (see
#      systemd.target(5)), and as a result of other directives (for example RequiresMountsFor=). Both explicitly and
#      implicitly introduced dependencies are shown with list-dependencies.

#-!! sudo systemctl list-dependencies NetworkManager.service --no-pager --with-dependencies --after
#& Show the units that are ordered before the specified unit
#-!! NetworkManager.service
#-!! ● ├─dbus-broker.service
#-!! ● ├─dbus.socket
#-!! ● ├─netcf-transaction.service
#-!! ● ├─system.slice
#-!! ● ├─systemd-journald.socket
#-!! ● ├─basic.target
#-!! ● │ ├─-.mount
#-!! ● │ ├─dbus-broker.service
#-!! ● │ ├─systemd-ask-password-plymouth.path
#-!! ● │ ├─tmp.mount
#-!! ● │ ├─paths.target
#-!! ● │ │ ├─cups.path
#-!! ● │ │ ├─systemd-ask-password-console.path
#-!! ● │ │ └─systemd-ask-password-wall.path
#-!! ● │ ├─slices.target
#-!! ● │ │ ├─-.slice
#-!! ● │ │ ├─machine.slice
#-!! ● │ │ ├─system.slice
#-!! ● │ │ └─user.slice
#-!! ● │ ├─sockets.target
#-!! ● │ │ ├─avahi-daemon.socket
#-!! ● │ │ ├─cups.socket
#-!! ● │ │ ├─dbus.socket
#-!! ● │ │ ├─docker.socket
#-!! ● │ │ ├─iscsid.socket
#-!! ● │ │ ├─iscsiuio.socket
#-!! ● │ │ ├─libvirtd-admin.socket
#-!! ● │ │ ├─libvirtd-ro.socket
#-!! ● │ │ ├─libvirtd.socket
#-!! ● │ │ ├─multipathd.socket
#-!! ● │ │ ├─pcscd.socket
#-!! ● │ │ ├─sssd-kcm.socket
#-!! ● │ │ ├─syslog.socket
#-!! ● │ │ ├─systemd-initctl.socket
#-!! ● │ │ ├─systemd-journald-audit.socket
#-!! ● │ │ ├─systemd-journald-dev-log.socket
#-!! ● │ │ ├─systemd-journald.socket
#-!! ● │ │ ├─systemd-udevd-control.socket
#-!! ● │ │ ├─systemd-udevd-kernel.socket
#-!! ● │ │ ├─systemd-userdbd.socket
#-!! ● │ │ ├─virtlockd-admin.socket
#-!! ● │ │ ├─virtlockd.socket
#-!! ● │ │ ├─virtlogd-admin.socket
#-!! ● │ │ └─virtlogd.socket
#-!! ● │ └─sysinit.target
#-!! ● │   ├─auditd.service
#-!! ● │   ├─dev-hugepages.mount
#-!! ● │   ├─dev-mqueue.mount
#-!! ● │   ├─emergency.service
#-!! ● │   ├─import-state.service
#-!! ● │   ├─kmod-static-nodes.service
#-!! ● │   ├─ldconfig.service
#-!! ● │   ├─modprobe@drm.service
#-!! ● │   ├─plymouth-read-write.service
#-!! ● │   ├─proc-sys-fs-binfmt_misc.automount
#-!! ● │   ├─selinux-autorelabel-mark.service
#-!! ● │   ├─sys-fs-fuse-connections.mount
#-!! ● │   ├─sys-kernel-config.mount
#-!! ● │   ├─sys-kernel-tracing.mount
#-!! ● │   ├─systemd-binfmt.service
#-!! ● │   ├─systemd-firstboot.service
#-!! ● │   ├─systemd-hwdb-update.service
#-!! ● │   ├─systemd-journal-catalog-update.service
#-!! ● │   ├─systemd-journald.service
#-!! ● │   ├─systemd-machine-id-commit.service
#-!! ● │   ├─systemd-modules-load.service
#-!! ● │   ├─systemd-sysctl.service
#-!! ● │   ├─systemd-sysusers.service
#-!! ● │   ├─systemd-timesyncd.service
#-!! ● │   ├─systemd-tmpfiles-setup-dev.service
#-!! ● │   ├─systemd-tmpfiles-setup.service
#-!! ● │   ├─systemd-udev-settle.service
#-!! ● │   ├─systemd-udev-trigger.service
#-!! ● │   ├─systemd-udevd.service
#-!! ● │   ├─systemd-update-done.service
#-!! ● │   ├─systemd-update-utmp.service
#-!! ● │   ├─systemd-userdbd.service
#-!! ● │   ├─cryptsetup.target
#-!! ● │   │ ├─dmraid-activation.service
#-!! ● │   │ ├─systemd-ask-password-console.path
#-!! ● │   │ └─systemd-ask-password-wall.path
#-!! ● │   ├─emergency.target
#-!! ● │   │ ├─emergency.service
#-!! ● │   │ └─import-state.service
#-!! ● │   ├─local-fs.target
#-!! ● │   │ ├─boot-efi.mount
#-!! ● │   │ ├─boot.mount
#-!! ● │   │ ├─home.mount
#-!! ● │   │ ├─ostree-remount.service
#-!! ● │   │ ├─run-media-luxcium-B.mount
#-!! ● │   │ ├─run-user-1000-doc.mount
#-!! ● │   │ ├─run-user-1000-gvfs.mount
#-!! ● │   │ ├─run-user-1000.mount
#-!! ● │   │ ├─systemd-fsck-root.service
#-!! ● │   │ ├─systemd-remount-fs.service
#-!! ● │   │ ├─tmp.mount
#-!! ● │   │ ├─var-lib-machines.mount
#-!! ● │   │ └─local-fs-pre.target
#-!! ● │   │   ├─dm-event.service
#-!! ● │   │   ├─dmraid-activation.service
#-!! ● │   │   ├─lvm2-monitor.service
#-!! ● │   │   ├─multipathd.service
#-!! ● │   │   ├─stratisd.service
#-!! ● │   │   ├─systemd-remount-fs.service
#-!! ● │   │   └─systemd-tmpfiles-setup-dev.service
#-!! ● │   └─swap.target
#-!! ● │     ├─dev-disk-by\x2did-dm\x2dname\x2dfedora\x2d\x2dnvme\x2dsystem_swap.swap
#-!! ● │     ├─dev-disk-by\x2did-d-!!m\x2duuid\x2dLVM\x2dpbjpHGNkmuCypQ661gOqoVD2mkGe3R1YjNCoWaKtJ0Ca1lcR8PLIOr4mVH30rKk4.swap
#-!! ● │     ├─dev-disk-by\x2dlabel-SWAP.swap
#-!! ● │     ├─dev-disk-by\x2duuid-3777e4e7\x2dfaf2\x2d455a\x2db468\x2dfb7fc412ea6b.swap
#-!! ● │     ├─dev-dm\x2d1.swap
#-!! ● │     ├─dev-fedora\x2dnvme-system_swap.swap
#-!! ● │     └─dev-mapper-fedora\x2d\x2dnvme\x2dsystem_swap.swap
#-!! ● ├─network-pre.target
#-!! ● │ ├─firewalld.service
#-!! ● │ └─nftables.service
#-!! ● └─sysinit.target
#-!! ●   ├─auditd.service
#-!! ●   ├─dev-hugepages.mount
#-!! ●   ├─dev-mqueue.mount
#-!! ●   ├─emergency.service
#-!! ●   ├─import-state.service
#-!! ●   ├─kmod-static-nodes.service
#-!! ●   ├─ldconfig.service
#-!! ●   ├─modprobe@drm.service
#-!! ●   ├─plymouth-read-write.service
#-!! ●   ├─proc-sys-fs-binfmt_misc.automount
#-!! ●   ├─selinux-autorelabel-mark.service
#-!! ●   ├─sys-fs-fuse-connections.mount
#-!! ●   ├─sys-kernel-config.mount
#-!! ●   ├─sys-kernel-tracing.mount
#-!! ●   ├─systemd-binfmt.service
#-!! ●   ├─systemd-firstboot.service
#-!! ●   ├─systemd-hwdb-update.service
#-!! ●   ├─systemd-journal-catalog-update.service
#-!! ●   ├─systemd-journald.service
#-!! ●   ├─systemd-machine-id-commit.service
#-!! ●   ├─systemd-modules-load.service
#-!! ●   ├─systemd-sysctl.service
#-!! ●   ├─systemd-sysusers.service
#-!! ●   ├─systemd-timesyncd.service
#-!! ●   ├─systemd-tmpfiles-setup-dev.service
#-!! ●   ├─systemd-tmpfiles-setup.service
#-!! ●   ├─systemd-udev-settle.service
#-!! ●   ├─systemd-udev-trigger.service
#-!! ●   ├─systemd-udevd.service
#-!! ●   ├─systemd-update-done.service
#-!! ●   ├─systemd-update-utmp.service
#-!! ●   ├─systemd-userdbd.service
#-!! ●   ├─cryptsetup.target
#-!! ●   │ ├─dmraid-activation.service
#-!! ●   │ ├─systemd-ask-password-console.path
#-!! ●   │ └─systemd-ask-password-wall.path
#-!! ●   ├─emergency.target
#-!! ●   │ ├─emergency.service
#-!! ●   │ └─import-state.service
#-!! ●   ├─local-fs.target
#-!! ●   │ ├─boot-efi.mount
#-!! ●   │ ├─boot.mount
#-!! ●   │ ├─home.mount
#-!! ●   │ ├─ostree-remount.service
#-!! ●   │ ├─run-media-luxcium-B.mount
#-!! ●   │ ├─run-user-1000-doc.mount
#-!! ●   │ ├─run-user-1000-gvfs.mount
#-!! ●   │ ├─run-user-1000.mount
#-!! ●   │ ├─systemd-fsck-root.service
#-!! ●   │ ├─systemd-remount-fs.service
#-!! ●   │ ├─tmp.mount
#-!! ●   │ ├─var-lib-machines.mount
#-!! ●   │ └─local-fs-pre.target
#-!! ●   │   ├─dm-event.service
#-!! ●   │   ├─dmraid-activation.service
#-!! ●   │   ├─lvm2-monitor.service
#-!! ●   │   ├─multipathd.service
#-!! ●   │   ├─stratisd.service
#-!! ●   │   ├─systemd-remount-fs.service
#-!! ●   │   └─systemd-tmpfiles-setup-dev.service
#-!! ●   └─swap.target
#-!! ●     ├─dev-disk-by\x2did-dm\x2dname\x2dfedora\x2d\x2dnvme\x2dsystem_swap.swap
#-!! ●     ├─dev-disk-by\x2did- #[...]
#-!!          dm\x2duuid\x2dLVM\x2dpbjpHGNkmuCypQ661gOqoVD2mkGe3R1YjNCoWaKtJ0Ca1lcR8PLIOr4mVH30rKk4.swap
#-!! ●     ├─dev-disk-by\x2dlabel-SWAP.swap
#-!! ●     ├─dev-disk-by\x2duuid-3777e4e7\x2dfaf2\x2d455a\x2db468\x2dfb7fc412ea6b.swap
#-!! ●     ├─dev-dm\x2d1.swap
#-!! ●     ├─dev-fedora\x2dnvme-system_swap.swap
#-!! ●     └─dev-mapper-fedora\x2d\x2dnvme\x2dsystem_swap.swap
